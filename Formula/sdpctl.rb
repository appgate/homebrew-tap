# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sdpctl < Formula
  desc "Official CLI tool for managing Appgate SDP Collectives"
  homepage "https://github.com/appgate/sdpctl/releases"
  version "2024.05.07"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/appgate/sdpctl/releases/download/2024.05.07/sdpctl_2024.05.07_darwin_amd64.tar.gz"
      sha256 "0d2986e26d933beb133ac60ed17ce7bcb8048907be7caed59a10f6307dd524a1"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/appgate/sdpctl/releases/download/2024.05.07/sdpctl_2024.05.07_darwin_arm64.tar.gz"
      sha256 "e1c5d5959bbe01b707c0a0b5863376e6f05e7d373461c7c94fe2abb57cc7530f"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/appgate/sdpctl/releases/download/2024.05.07/sdpctl_2024.05.07_linux_arm64.tar.gz"
      sha256 "91580f6bc6c969faa107ac9396f31b280466558e08bcf44530a8272e32be42c9"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/appgate/sdpctl/releases/download/2024.05.07/sdpctl_2024.05.07_linux_amd64.tar.gz"
      sha256 "5df657d87219711068d654e128720ae7e151863567a269847381e2daa597617e"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  test do
    version_output = shell_output("#{bin}/sdpctl --version")
    assert_match "sdpctl version #{version}", version_output.split("\n")[0]

    profile_add = shell_output("#{bin}/sdpctl profile add test")
    expected = "Created profile test, run 'sdpctl profile list' to see all available profiles\n" \
               "run 'sdpctl profile set test' to select the new profile"
    assert_match expected, profile_add

    profile_set = shell_output("#{bin}/sdpctl profile set test")
    expected = "test is selected as current sdp profile\n" \
               "test is not configured yet, run 'sdpctl configure'"
    assert_match expected, profile_set

    configure = shell_output("#{bin}/sdpctl configure https://example.com:8443")
    expected = "Configuration updated successfully"
    assert_match expected, configure
  end
end
