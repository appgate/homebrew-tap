# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sdpctl < Formula
  desc "Official CLI tool for managing Appgate SDP Collectives"
  homepage "https://github.com/appgate/sdpctl/releases"
  version "2025.05.28"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/appgate/sdpctl/releases/download/2025.05.28/sdpctl_2025.05.28_darwin_arm64.tar.gz"
      sha256 "b2690c9560234b9d27b87c0574aa791395b8961f72851c9d69e69061aeb6692b"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/appgate/sdpctl/releases/download/2025.05.28/sdpctl_2025.05.28_darwin_amd64.tar.gz"
      sha256 "689284ebe34a359c6f991f4291d480e60f24b31aa9f32cc87f460a2b7c073c05"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/appgate/sdpctl/releases/download/2025.05.28/sdpctl_2025.05.28_linux_arm64.tar.gz"
      sha256 "65b397d869324975701991e98efb8074d38c1bb4ee6229376e82a613d9be5b19"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/appgate/sdpctl/releases/download/2025.05.28/sdpctl_2025.05.28_linux_amd64.tar.gz"
      sha256 "35fc29e6dbfb75300f209b02b47f2a03673b6b4c8562a78028830d64758fc3c2"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  test do
    version_output = shell_output("#{bin}/sdpctl --version")
    assert_match "sdpctl version #{version}", version_output.split("\n")[0]

    profile_add = shell_output("#{bin}/sdpctl profile add test")
    expected = "Created profile test, run 'sdpctl profile list' to see all available profiles\n" \
               "run 'sdpctl profile set test' to select the new profile"
    assert_match expected, profile_add

    profile_set = shell_output("#{bin}/sdpctl profile set test")
    expected = "test is selected as current sdp profile\n" \
               "test is not configured yet, run 'sdpctl configure'"
    assert_match expected, profile_set

    configure = shell_output("#{bin}/sdpctl configure https://example.com:8443")
    expected = "Configuration updated successfully"
    assert_match expected, configure
  end
end
