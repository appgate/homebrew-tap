# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sdpctl < Formula
  desc "Official CLI tool for managing Appgate SDP Collectives"
  homepage "https://github.com/appgate/sdpctl/releases"
  version "2024.08.13"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/appgate/sdpctl/releases/download/2024.08.13/sdpctl_2024.08.13_darwin_arm64.tar.gz"
      sha256 "5401fc2c6c734c74e8c98c2c53ea7dae1e277b316eb5c9d9cf2ef509b87f367f"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/appgate/sdpctl/releases/download/2024.08.13/sdpctl_2024.08.13_darwin_amd64.tar.gz"
      sha256 "bd930d24fe6d88ce8fc91e0951120cf15da9727b99908d29f1e927442889364d"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      url "https://github.com/appgate/sdpctl/releases/download/2024.08.13/sdpctl_2024.08.13_linux_amd64.tar.gz"
      sha256 "2e0ef2c944919717d2d2ec1114f72e63fdde09936816d2e51c834d7ab5a7f992"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/appgate/sdpctl/releases/download/2024.08.13/sdpctl_2024.08.13_linux_arm64.tar.gz"
      sha256 "e6ac42ad28305f084f97cf2a750602ccb1c52838ae24a02e09ad0dddb8919e4e"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  test do
    version_output = shell_output("#{bin}/sdpctl --version")
    assert_match "sdpctl version #{version}", version_output.split("\n")[0]

    profile_add = shell_output("#{bin}/sdpctl profile add test")
    expected = "Created profile test, run 'sdpctl profile list' to see all available profiles\n" \
               "run 'sdpctl profile set test' to select the new profile"
    assert_match expected, profile_add

    profile_set = shell_output("#{bin}/sdpctl profile set test")
    expected = "test is selected as current sdp profile\n" \
               "test is not configured yet, run 'sdpctl configure'"
    assert_match expected, profile_set

    configure = shell_output("#{bin}/sdpctl configure https://example.com:8443")
    expected = "Configuration updated successfully"
    assert_match expected, configure
  end
end
