# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sdpctl < Formula
  desc "Official CLI tool for managing AppGate SDP Collectives"
  homepage "https://appgate.github.io/sdpctl/"
  version "2025.09.30"
  license "MIT"

  on_macos do
    if Hardware::CPU.arm?
      url "https://github.com/appgate/sdpctl/releases/download/2025.09.30/sdpctl_2025.09.30_darwin_arm64.tar.gz"
      sha256 "0110c92d302eba61ae8f41d0500e9423da287c49b9875b7b283f82dc692e4ddb"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/appgate/sdpctl/releases/download/2025.09.30/sdpctl_2025.09.30_darwin_amd64.tar.gz"
      sha256 "6a7966b839ad8c6fa2f1e1ca4216c49fb15a1aa38425c44341a4b70a9d33c4e2"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/appgate/sdpctl/releases/download/2025.09.30/sdpctl_2025.09.30_linux_arm64.tar.gz"
      sha256 "14f50e654474e793bf501613d362cf7bfb2277efd01e7af89342533db7ba9d7f"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/appgate/sdpctl/releases/download/2025.09.30/sdpctl_2025.09.30_linux_amd64.tar.gz"
      sha256 "12461aa74099e71270c5ec471d97a34d2cc687e582630738053549d75ba52166"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  test do
    version_output = shell_output("#{bin}/sdpctl --version")
    assert_match "sdpctl version #{version}", version_output.split("\n")[0]

    profile_add = shell_output("#{bin}/sdpctl profile add test")
    expected = "Created profile test, run 'sdpctl profile list' to see all available profiles\n" \
               "run 'sdpctl profile set test' to select the new profile"
    assert_match expected, profile_add

    profile_set = shell_output("#{bin}/sdpctl profile set test")
    expected = "test is selected as current sdp profile\n" \
               "test is not configured yet, run 'sdpctl configure'"
    assert_match expected, profile_set

    configure = shell_output("#{bin}/sdpctl configure https://example.com:8443")
    expected = "Configuration updated successfully"
    assert_match expected, configure
  end
end
