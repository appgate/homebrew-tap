# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sdpctl < Formula
  desc "Official CLI tool for managing Appgate SDP Collectives"
  homepage "https://github.com/appgate/sdpctl/releases"
  version "2025.02.07"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/appgate/sdpctl/releases/download/2025.02.07/sdpctl_2025.02.07_darwin_amd64.tar.gz"
      sha256 "67439a9e226d8d82c25a59613dc1105edd6e65d123bfa6b1a18d3b0062322bca"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/appgate/sdpctl/releases/download/2025.02.07/sdpctl_2025.02.07_darwin_arm64.tar.gz"
      sha256 "f0df5c29a2b7d0f4e0ea6246d18a5d2633e02631c78ed4e5c9944f4aa1f5abc5"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/appgate/sdpctl/releases/download/2025.02.07/sdpctl_2025.02.07_linux_arm64.tar.gz"
      sha256 "eb45a2d771fd9c041da66d2ff18577507f019fd62e3c9ff0b75d69d935989e33"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/appgate/sdpctl/releases/download/2025.02.07/sdpctl_2025.02.07_linux_amd64.tar.gz"
      sha256 "59e093a5503b8175c69efbc9f344a75ca470d05195fbd18cc61e0997121ea9be"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  test do
    version_output = shell_output("#{bin}/sdpctl --version")
    assert_match "sdpctl version #{version}", version_output.split("\n")[0]

    profile_add = shell_output("#{bin}/sdpctl profile add test")
    expected = "Created profile test, run 'sdpctl profile list' to see all available profiles\n" \
               "run 'sdpctl profile set test' to select the new profile"
    assert_match expected, profile_add

    profile_set = shell_output("#{bin}/sdpctl profile set test")
    expected = "test is selected as current sdp profile\n" \
               "test is not configured yet, run 'sdpctl configure'"
    assert_match expected, profile_set

    configure = shell_output("#{bin}/sdpctl configure https://example.com:8443")
    expected = "Configuration updated successfully"
    assert_match expected, configure
  end
end
