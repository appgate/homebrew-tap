# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Sdpctl < Formula
  desc "Official CLI tool for managing Appgate SDP Collectives"
  homepage "https://github.com/appgate/sdpctl/releases"
  version "2025.05.29"
  license "MIT"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/appgate/sdpctl/releases/download/2025.05.29/sdpctl_2025.05.29_darwin_amd64.tar.gz"
      sha256 "0406d7a2a791bb080af463047ff91cbdeb19feddf6622d6279fd4002917dad28"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/appgate/sdpctl/releases/download/2025.05.29/sdpctl_2025.05.29_darwin_arm64.tar.gz"
      sha256 "a5d39da158f13dd7c2445646fa95c9e44cb6e4cc77fe45a87e38ffbdcd547cca"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  on_linux do
    if Hardware::CPU.arm? && Hardware::CPU.is_64_bit?
      url "https://github.com/appgate/sdpctl/releases/download/2025.05.29/sdpctl_2025.05.29_linux_arm64.tar.gz"
      sha256 "2838efd0ffa9340d1f0a2d99f6625cf0ea07eb88b49ce6924f816dbca3bfea29"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
    if Hardware::CPU.intel?
      url "https://github.com/appgate/sdpctl/releases/download/2025.05.29/sdpctl_2025.05.29_linux_amd64.tar.gz"
      sha256 "0571e7573b9d0262da2cfe5e4c06ef7b54a13fdadb32bceb6eb33df522bbf0b0"

      def install
        bin.install "sdpctl"
        generate_completions_from_executable("#{bin}/sdpctl", "completion", shells: [:bash, :zsh, :fish])
      end
    end
  end

  test do
    version_output = shell_output("#{bin}/sdpctl --version")
    assert_match "sdpctl version #{version}", version_output.split("\n")[0]

    profile_add = shell_output("#{bin}/sdpctl profile add test")
    expected = "Created profile test, run 'sdpctl profile list' to see all available profiles\n" \
               "run 'sdpctl profile set test' to select the new profile"
    assert_match expected, profile_add

    profile_set = shell_output("#{bin}/sdpctl profile set test")
    expected = "test is selected as current sdp profile\n" \
               "test is not configured yet, run 'sdpctl configure'"
    assert_match expected, profile_set

    configure = shell_output("#{bin}/sdpctl configure https://example.com:8443")
    expected = "Configuration updated successfully"
    assert_match expected, configure
  end
end
